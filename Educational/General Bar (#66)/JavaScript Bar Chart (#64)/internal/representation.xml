<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="viewRepresentation">
<entry key="jsNamespace" type="xstring" value="grouped_bar_chart_namespace"/>
<config key="jsCode">
<entry key="array-size" type="xint" value="1"/>
<entry key="0" type="xstring" value="(grouped_bar_chart_namespace = function() {%%00010%%00010%%00009var barchart = {};%%00010%%00009var layoutContainer;%%00010%%00009var MIN_HEIGHT = 200, MIN_WIDTH = 300;%%00010%%00009var _representation, _value;%%00010%%00009var chart, svg;%%00010%%00009var staggerCheckbox;%%00010%%00009var knimeTable;%%00010%%00009%%00009%%00010%%00009var plotData; %%00010%%00009var colorRange;%%00010%%00009var categories;%%00010%%00009var freqCols;%%00010%%00009%%00010%%00009/**%%00010%%00009 * 2d-array where for each category (indexing follows categories array) we store an array of those frequency columns, which have a missing value in the current category.%%00010%%00009 * This allows to exclude specific bars or even the whole category.%%00010%%00009 * Storing by category helps to group warnings also by category. %%00010%%00009 * Required for missing values handling.%%00010%%00009 */%%00010%%00009var missValInCat;%%00010%%00010%%00009/**%%00010%%00009 * Array where for each frequency column, which has in all other categories only missing values, we store whether it has a value in the Missing values category.%%00010%%00009 * This allows to decide, if we should keep this freq column (if it has a value in MissValCat and the option &quot;include MissValCat&quot; is on) or exclude it.%%00010%%00009 * Each item has the fields:%%00010%%00009 *     col - name of freq column%%00010%%00009 *     hasValueOnMissValCat - whether the column has a non-missing value in the Missing values category (true/false)%%00010%%00009 * Required for missing values handling.%%00010%%00009 */%%00010%%00009var freqColValueOnMissValCat;%%00010%%00009%%00010%%00009/**%%00010%%00009 * Array where for each frequency column, which has non-missing value in the Missing values category, we store this value.%%00010%%00009 * We need to store it separately to quickly add/remove them to the plot data, when the option &quot;include MissValCat&quot; is getting switched.%%00010%%00009 * Each item has the fields:%%00010%%00009 *   col - name of freq column%%00010%%00009 *   value - non-missing value, this freq column has in the Missing values category%%00010%%00009 * Required for missing values handling.%%00010%%00009 */%%00010%%00009var missValCatValues;%%00010%%00009%%00010%%00009/**%%00010%%00009 * Boolean flag - is the Missing values category present in the dataset.%%00010%%00009 * Required for missing values handling.%%00010%%00009 */%%00010%%00009var isMissValCat;%%00010%%00009%%00010%%00009/**%%00010%%00009 * Map where %%00010%%00009 *    keys - frequency column names,%%00010%%00009 *    values - array of those categories for which the bar, specified by the corresponding freq column and the category, was excluded from the view.%%00010%%00009 * There excluded bars actually specify those dummy null values, we have to add to the stacked chart to fix it.%%00010%%00009 * Choosing freq cols as keys helps adding dummy nulls since the plot dataset has to be key-&gt;values. %%00010%%00009 * Required for missing values handling.%%00010%%00009 */%%00010%%00009var excludeFreqColCatMap;%%00010%%00009%%00010%%00009var showWarnings;%%00010%%00010%%00009var MISSING_VALUES_LABEL = &quot;Missing values&quot;;%%00010%%00009var MISSING_VALUES_ONLY = &quot;missingValuesOnly&quot;;%%00010%%00009var FREQ_COLUMN_MISSING_VALUES_ONLY = &quot;freqColumnMissingValuesOnly&quot;;%%00010%%00009var CATEGORY_MISSING_VALUES_ONLY = &quot;categoryMissingValuesOnly&quot;;%%00010%%00009var NO_DATA_AVAILABLE = &quot;noDataAvailable&quot;;%%00010%%00009%%00010%%00009barchart.init = function(representation, value) {  %%00010%%00009%%00009_value = value;%%00010%%00009%%00009_representation = representation;%%00010%%00009%%00009%%00010%%00009%%00009showWarnings = _representation.options.showWarnings;%%00010        %%00010        if (_representation.warnMessage &amp;&amp; showWarnings) {%%00010%%00009%%00009%%00009knimeService.setWarningMessage(_representation.warnMessage);%%00010%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00010%%00009%%00009drawChart();%%00010%%00009%%00009if (_representation.options.enableViewControls) {%%00010%%00009%%00009%%00009drawControls();%%00010%%00009%%00009}%%00010%%00009%%00009%%00010%%00009%%00009if (parent != undefined &amp;&amp; parent.KnimePageLoader != undefined) {%%00010%%00009%%00009%%00009parent.KnimePageLoader.autoResize(window.frameElement.id);%%00010%%00009%%00009}%%00010%%00009}%%00010%%00010%%00009function drawChart(redraw) {%%00010%%00009%%00009d3.selectAll(&quot;html, body&quot;).style(&quot;width&quot;, &quot;100%&quot;).style(&quot;height&quot;, &quot;100%&quot;).style(&quot;margin&quot;, &quot;0&quot;).style(&quot;padding&quot;, &quot;0&quot;);%%00010%%00010%%00009%%00009/*%%00010%%00009%%00009 * Process options%%00010%%00009%%00009 */%%00010%%00009%%00009var viewControls = _representation.options.enableViewControls;%%00010%%00009%%00009var optWidth = _representation.options[&quot;width&quot;];%%00010%%00009%%00009var optHeight = _representation.options[&quot;height&quot;];%%00010%%00010%%00009%%00009var optTitle = _value.options[&quot;title&quot;];%%00010%%00009%%00009var optSubtitle = _value.options[&quot;subtitle&quot;];%%00010%%00009%%00009var optCatLabel = _value.options[&quot;catLabel&quot;];%%00010%%00009%%00009var optFreqLabel = _value.options[&quot;freqLabel&quot;];%%00010%%00009%%00009%%00010%%00009%%00009var optStaggerLabels = _representation.options[&quot;staggerLabels&quot;];%%00010%%00009%%00009var optLegend = _representation.options[&quot;legend&quot;];%%00009%%00009%%00010%%00010%%00009%%00009var optOrientation = _value.options[&quot;orientation&quot;];%%00009%%00010%%00010%%00009%%00009var optFullscreen = _representation.options[&quot;svg&quot;][&quot;fullscreen&quot;] &amp;&amp; _representation.runningInView;%%00010%%00009%%00009var optWidth = _representation.options[&quot;svg&quot;][&quot;width&quot;]%%00010%%00009%%00009var optHeight = _representation.options[&quot;svg&quot;][&quot;height&quot;]%%00010%%00009%%00009%%00010%%00009%%00009var isTitle = optTitle || optSubtitle;%%00010%%00010%%00009%%00009var body = d3.select(&quot;body&quot;);%%00010%%00010%%00009%%00009var width = optWidth + &quot;px&quot;;%%00010%%00009%%00009var height = optHeight + &quot;px&quot;;%%00010%%00009%%00009if (optFullscreen) {%%00010%%00009%%00009%%00009width = &quot;100%&quot;;%%00010%%00009%%00009%%00009height = (isTitle) ? &quot;100%&quot; : &quot;calc(100% - &quot; + knimeService.headerHeight() + &quot;px)&quot;;%%00010%%00009%%00009}%%00010%%00009%%00009%%00010%%00009%%00009var div;%%00010%%00009%%00009if (redraw) {%%00010%%00009%%00009%%00009d3.select(&quot;svg&quot;).remove();%%00010%%00009%%00009%%00009div = d3.select(&quot;#svgContainer&quot;);%%00010%%00009%%00009} else {%%00010%%00009%%00009%%00009layoutContainer = body.append(&quot;div&quot;)%%00010%%00009%%00009%%00009%%00009.attr(&quot;id&quot;, &quot;layoutContainer&quot;)%%00010%%00009%%00009%%00009%%00009.style('display', 'block')%%00010%%00009%%00009%%00009%%00009.style(&quot;width&quot;, width)%%00010%%00009%%00009%%00009%%00009.style(&quot;height&quot;, height)%%00010%%00009%%00009%%00009%%00009.style(&quot;min-width&quot;, MIN_WIDTH + &quot;px&quot;)%%00010%%00009%%00009%%00009%%00009.style(&quot;min-height&quot;, MIN_HEIGHT + &quot;px&quot;);%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009div = layoutContainer.append(&quot;div&quot;)%%00010%%00009%%00009%%00009%%00009.attr(&quot;id&quot;, &quot;svgContainer&quot;)%%00010%%00009%%00009%%00009%%00009.style(&quot;min-width&quot;, MIN_WIDTH + &quot;px&quot;)%%00010%%00009%%00009%%00009%%00009.style(&quot;min-height&quot;, MIN_HEIGHT + &quot;px&quot;)%%00010%%00009%%00009%%00009%%00009.style(&quot;box-sizing&quot;, &quot;border-box&quot;)%%00010%%00009%%00009%%00009%%00009.style(&quot;overflow&quot;, &quot;hidden&quot;)%%00010%%00009%%00009%%00009%%00009.style(&quot;margin&quot;, &quot;0&quot;);%%00010%%00009%%00009}%%00010%%00010%%00010%%00009%%00009var svg1 = document.createElementNS('http://www.w3.org/2000/svg', 'svg');%%00010%%00009%%00009div[0][0].appendChild(svg1);%%00010%%00010%%00009%%00009svg = d3.select(&quot;svg&quot;)%%00010%%00009%%00009%%00009.style(&quot;font-family&quot;, &quot;sans-serif&quot;)%%00010%%00009%%00009%%00009.style(&quot;display&quot;, &quot;block&quot;)%%00010%%00009%%00009%%00009.classed(&quot;colored&quot;, true);%%00010%%00010%%00009%%00009if (!optFullscreen) {%%00010%%00009%%00009%%00009if (optWidth &gt; 0) {%%00010%%00009%%00009%%00009%%00009div.style(&quot;width&quot;, optWidth+&quot;px&quot;)%%00010%%00009%%00009%%00009%%00009svg.attr(&quot;width&quot;, optWidth);%%00010%%00009%%00009%%00009%%00009// Looks like the below doesn't work,%%00010%%00009%%00009%%00009%%00009// above does work...%%00010%%00009%%00009%%00009%%00009//chart.width(optWidth);%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009if (optHeight &gt; 0) {%%00010%%00009%%00009%%00009%%00009svg.attr(&quot;height&quot;, optHeight);%%00010%%00009%%00009%%00009%%00009div.style(&quot;height&quot;, optHeight+&quot;px&quot;);%%00010%%00009%%00009%%00009%%00009// Looks like the below doesn't work,%%00010%%00009%%00009%%00009%%00009// above does work...%%00010%%00009%%00009%%00009%%00009//chart.height(optHeight);%%00010%%00009%%00009%%00009}%%00009    %%00009%%00010%%00009%%00009} else {%%00010%%00009%%00009%%00009// Set full screen height/width%%00010%%00009%%00009%%00009div.style(&quot;width&quot;, &quot;100%&quot;);%%00010%%00009%%00009%%00009div.style(&quot;height&quot;, height);%%00010%%00010%%00009%%00009%%00009svg.attr(&quot;width&quot;, &quot;100%&quot;);%%00010%%00009%%00009%%00009svg.attr(&quot;height&quot;, &quot;100%&quot;);%%00010%%00009%%00009}%%00010%%00009%%00009%%00010%%00009%%00009if (!redraw) {%%00009%%00009%%00010%%00009%%00009%%00009/* %%00010%%00009%%00009%%00009 * Process data%%00010%%00009%%00009%%00009 */%%00009%%00009%%00010%%00009%%00009%%00009knimeTable = new kt();%%00010%%00009%%00009%%00009// Add the data from the input port to the knimeTable.%%00010%%00009%%00009%%00009var port0dataTable = _representation.inObjects[0];%%00010%%00009%%00009%%00009knimeTable.setDataTable(port0dataTable);%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009processData();%%00010%%00009%%00009}%%00010%%00010%%00009%%00009%%00010%%00009%%00009/*%%00010%%00009%%00009 * Plot chart%%00010%%00009%%00009 */%%00010%%00009%%00009nv.addGraph(function() {%%00010%%00009%%00009%%00009if (optOrientation) {%%00010%%00009%%00009%%00009%%00009chart = nv.models.multiBarHorizontalChart();%%00010%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009chart = nv.models.multiBarChart();%%00010%%00009%%00009%%00009%%00009chart.reduceXTicks(false);%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009var stacked = _value.options.chartType == 'Stacked';%%00010%%00009%%00009%%00009if (stacked) {%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009fixStackedData(true);  // add dummy nulls%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009chart.stacked(stacked);%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009chart%%00010%%00009%%00009%%00009%%00009.color(colorRange)%%00010%%00009%%00009%%00009%%00009.duration(300)%%00010%%00009%%00009%%00009%%00009.margin({right: 20, top: 60})%%00010%%00009%%00009%%00009%%00009.groupSpacing(0.1);%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009updateTitles(false);%%00010%%00010%%00009        chart.showControls(false);  // all the controls moved to Settings menu%%00010%%00009%%00009%%00009chart.showLegend(optLegend);%%00010%%00010%%00009%%00009%%00009updateAxisLabels(false);%%00010%%00010%%00009%%00009%%00009svg.datum(plotData)%%00010%%00009%%00009%%00009%%00009.transition().duration(300)%%00010%%00009%%00009%%00009%%00009.call(chart);%%00010%%00009%%00009%%00009nv.utils.windowResize(chart.update);%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009return chart;%%00010%%00009%%00009})%%00009%%00010%%00009}%%00010%%00009%%00010%%00009processData = function() {%%00010%%00009%%00009var optMethod = _representation.options[&quot;aggr&quot;];%%00010%%00009%%00009var optFreqCol = _representation.options[&quot;freq&quot;];%%00010%%00009%%00009var optCat = _representation.options[&quot;cat&quot;];%%00010%%00009%%00009%%00010%%00009%%00009var customColors, colorScale;%%00010%%00009%%00009if (_representation.inObjects[1]) {%%00010%%00009%%00009%%00009// Custom color scale%%00010%%00009%%00009%%00009var colorTable = new kt();%%00010%%00009%%00009%%00009colorTable.setDataTable(_representation.inObjects[1]);%%00010%%00009%%00009%%00009if (colorTable.getColumnTypes()[0] == 'string') {%%00010%%00009%%00009%%00009%%00009customColors = {};%%00010%%00009%%00009%%00009%%00009var colorCol = colorTable.getColumn(0);%%00010%%00009%%00009%%00009%%00009for (var i = 0; i &lt; colorCol.length; i++) {%%00010%%00009%%00009%%00009%%00009%%00009customColors[colorCol[i]] = colorTable.getRowColors()[i];%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009colorScale = [];%%00010%%00009%%00009%%00009}%%00010%%00009%%00009}%%00010%%00009%%00009%%00010%%00009%%00009categories = knimeTable.getColumn(optCat);%%00010%%00009%%00009var numCat = categories.length;%%00010%%00009%%00009%%00010%%00009%%00009if (optMethod == &quot;Occurence\u00A0Count&quot;) {%%00010%%00009%%00009%%00009optFreqCol = [knimeTable.getColumnNames()[1]];%%00010%%00009%%00009}%%00010%%00010%%00009%%00009// Get the frequency columns%%00010%%00009%%00009var valCols = [];%%00010%%00009%%00009var isDuplicate = false;%%00010%%00009%%00009freqCols = [];%%00010%%00010%%00009%%00009for (var k = 0; k &lt; optFreqCol.length; k++) {%%00010%%00009%%00009%%00009var valCol = knimeTable.getColumn(optFreqCol[k]);%%00010%%00009%%00009%%00009// ToDo: Add an isDuplicate test here...%%00010%%00009%%00009%%00009if (isDuplicate != true) {%%00010%%00009%%00009%%00009%%00009valCols.push( valCol );%%00010%%00009%%00009%%00009%%00009freqCols.push(optFreqCol[k]);%%00010%%00009%%00009%%00009}%%00010%%00009%%00009}%%00009%%00009%%00010%%00009%%00009%%00010%%00009%%00009plotData = [];%%00010%%00009%%00009freqColValueOnMissValCat = [];%%00010%%00009%%00009missValInCat = new Array(numCat);%%00010%%00009%%00009for (var i = 0; i &lt; numCat; i++) {%%00010%%00009%%00009%%00009missValInCat[i] = [];%%00010%%00009%%00009}%%00010%%00009%%00009isMissValCat = false;%%00010%%00009%%00009missValCatValues = [];%%00010%%00009%%00009var numFreqColsNoMissVal = 0;  // number of freq columns which have non-missing values (needed for color scale)%%00010%%00009%%00009if (valCols.length &gt; 0) {%%00010%%00009%%00009%%00009var numDataPoints = valCols[0].length;%%00010%%00009%%00009%%00009for (var j = 0; j &lt; freqCols.length; j++) {%%00009%%00010%%00010%%00009%%00009%%00009%%00009var col = freqCols[j];%%00010%%00009%%00009%%00009%%00009if (optMethod == &quot;Occurence\u00A0Count&quot;) {%%00010%%00009%%00009%%00009%%00009%%00009col = &quot;Occurrence Count&quot;;%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009var values = [];%%00010%%00009%%00009%%00009%%00009var onlyMissValInCats = true;  // whether the freq col has only missing values in non-&quot;Missing values&quot; categories%%00010%%00009%%00009%%00009%%00009var hasValueOnMissValCat = false;  // whether the freq col has a non-missing value in the Missing values category%%00010%%00010%%00009%%00009%%00009%%00009for (var i = 0; i &lt; numDataPoints; i++) {%%00010%%00009%%00009%%00009%%00009%%00009if (categories != undefined) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009if (isDuplicate == true)  {%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009alert(&quot;Duplicate categories found in column.&quot;);%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009return &quot;duplicate&quot;;%%00010%%00009%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009%%00009%%00009var cat = categories[i];%%00010%%00009%%00009%%00009%%00009%%00009%%00009var val = valCols[j][i];%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009%%00009%%00009if (cat !== null) {%%00009%%00009%%00009%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009if (val !== null) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009%%00009// if both cat and value are not null - normal case, just add the value%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009%%00009onlyMissValInCats = false;%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009%%00009values.push({&quot;x&quot;: cat, &quot;y&quot;: val});%%00009%%00009%%00009%%00009%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009// Missing values category%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009isMissValCat = true;%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009if (val !== null) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009%%00009// save the non-missing value for the corresponding freq col%%00009%%00009%%00009%%00009%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009%%00009missValCatValues.push({&quot;col&quot;: col, &quot;value&quot;: val});%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009%%00009// this freq col has non-missing value in the Missing value category%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009%%00009hasValueOnMissValCat = true;%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009%%00009%%00009if (val === null) {%%00009%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009// this freq col has a missing value in the current category - save this info %%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009missValInCat[i].push(col);%%00010%%00009%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009if (!onlyMissValInCats) {%%00010%%00009%%00009%%00009%%00009%%00009// the freq col has non-missing values in normal categories - add this column to the view%%00010%%00009%%00009%%00009%%00009%%00009var plotStream = {&quot;key&quot;: col, &quot;values&quot;: values};%%00010%%00009%%00009%%00009%%00009%%00009plotData.push(plotStream);%%00010%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009%%00009if (customColors) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009var color = customColors[col];%%00010%%00009%%00009%%00009%%00009%%00009%%00009if (!color) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009color = &quot;#7C7C7C&quot;;%%00010%%00009%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00009%%00009colorScale.push(color);%%00010%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00009numFreqColsNoMissVal++;%%00010%%00009%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009%%00009// The freq col has only missing values in normal categories - %%00010%%00009%%00009%%00009%%00009%%00009//   we save whether it has a non-missing value in the Missing values category.%%00010%%00009%%00009%%00009%%00009%%00009// Whether this column is going to be displayed in the view depends on the &quot;includeMissValCat&quot; option.%%00010%%00009%%00009%%00009%%00009%%00009// So we don't add the column to the plot at this moment - wait for processMissingValues()%%00010%%00009%%00009%%00009%%00009%%00009// Note: a non-missing value (if there is) is stored in missValCatValues - hence, enough to store only a boolean flag%%00010%%00009%%00009%%00009%%00009%%00009freqColValueOnMissValCat.push({&quot;col&quot;: col, &quot;hasValueOnMissValCat&quot;: hasValueOnMissValCat});%%00010%%00009%%00009%%00009%%00009%%00009if (hasValueOnMissValCat) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009// If there is a non-missing value, then the presence of the column depends on the &quot;includeMissValCat&quot; option,%%00010%%00009%%00009%%00009%%00009%%00009%%00009//   which can be switched in the view on the fly.%%00010%%00009%%00009%%00009%%00009%%00009%%00009// We do not want this switch to influence on the color scale, so we count it%%00010%%00009%%00009%%00009%%00009%%00009%%00009numFreqColsNoMissVal++;%%00010%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009}%%00010%%00009%%00009} else {%%00010%%00009%%00009%%00009if (hasNull == false) {%%00010%%00009%%00009%%00009%%00009alert(&quot;No numeric columns detected.&quot;);%%00010%%00009%%00009%%00009%%00009return &quot;numeric&quot;;%%00010%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009alert(&quot;Numeric columns detected, but contains missing values.&quot;);%%00010%%00009%%00009%%00009%%00009return &quot;missing&quot;;%%00010%%00009%%00009%%00009}%%00010%%00009%%00009}%%00010%%00009%%00009%%00010%%00009%%00009if (customColors) {%%00010%%00009%%00009%%00009colorRange = colorScale;%%00010%%00009%%00009} else {%%00010%%00009%%00009%%00009// Default color scale%%00010%%00009%%00009%%00009if (numFreqColsNoMissVal &gt; 10) {%%00010%%00009%%00009%%00009%%00009colorScale = d3.scale.category20();%%00010%%00009%%00009%%00009} else {%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009colorScale = d3.scale.category10();%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009colorRange = colorScale.range();%%00010%%00009%%00009}%%00009%%00009%%00010%%00009%%00009%%00010%%00009%%00009processMissingValues();%%00010%%00009}%%00010%%00009%%00010%%00009/**%%00010%%00009 * switched - if the chart update was triggered by changing the &quot;include 'Missing values' category&quot; option in the view%%00010%%00009 */%%00010%%00009processMissingValues = function(switched) {%%00010%%00009%%00009// Make a list of freq columns to exclude%%00010%%00009%%00009var excludeCols = [];  // column names to exclude%%00010%%00009%%00009// Go through the list of those freq cols which have only missing values in normal categories%%00010%%00009%%00009// and exclude those which either 1) has a missing value in the Missing values category, or%%00010%%00009%%00009// 2) has a non-missing value there but the option is set to Don't include missing values%%00010%%00009%%00009for (var i = 0; i &lt; freqColValueOnMissValCat.length; i++) {%%00010%%00009%%00009%%00009var col = freqColValueOnMissValCat[i];%%00010%%00009%%00009%%00009if (!col.hasValueOnMissValCat || col.hasValueOnMissValCat &amp;&amp; !_value.options.includeMissValCat) {%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009excludeCols.push(col.col);%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009}%%00009%%00009%%00009%%00010%%00009%%00009}%%00010%%00009%%00009%%00010%%00009%%00009// Make a list of excluded bars per category or whole categories%%00010%%00009%%00009var excludeBars = [];  // bars (in string representation) to exclude%%00010%%00009%%00009var excludeCats = [];  // category names to exclude%%00010%%00009%%00009var numLeftCols = freqCols.length - excludeCols.length;  // how many columns left after excluded ones%%00010%%00009%%00009var missValCatBars;  // bars for Missing values category we add to the end, so we store them separately%%00010%%00009%%00009var excludeWholeMissValCat = false;%%00010%%00009%%00009excludeFreqColCatMap = {};%%00010%%00009%%00009// We group the warnings by category, so we iterate over categories%%00010%%00009%%00009for (var i = 0; i &lt; missValInCat.length; i++) {%%00010%%00009%%00009%%00009var cat = categories[i];%%00010%%00009%%00009%%00009// take only those freq cols which have missing values in the current category and were not whole excluded%%00010%%00009%%00009%%00009var cols = missValInCat[i].filter(function(x) { return excludeCols.indexOf(x) == -1 });%%00009%%00009%%00009%%00010%%00009%%00009%%00009if (cols.length &gt; 0) {%%00010%%00009%%00009%%00009%%00009if (cols.length == numLeftCols) {%%00010%%00009%%00009%%00009%%00009%%00009// if all the left freq cols have missing values - exclude the whole category%%00010%%00009%%00009%%00009%%00009%%00009if (cat !== null) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009excludeCats.push(cat);%%00010%%00009%%00009%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009%%00009%%00009excludeWholeMissValCat = true;  // Missing values category will be appended to the end%%00010%%00009%%00009%%00009%%00009%%00009}%%00009%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009%%00009// build a string of excluded bars (cat - col1, col2 ...)%%00010%%00009%%00009%%00009%%00009%%00009var label = cat !== null ? cat : MISSING_VALUES_LABEL;%%00010%%00009%%00009%%00009%%00009%%00009var str = label + &quot; - &quot; + cols.join(&quot;, &quot;);%%00010%%00009%%00009%%00009%%00009%%00009if (cat !== null) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009excludeBars.push(str);%%00009%%00009%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009%%00009%%00009missValCatBars = str;  // Missing values category will be appended to the end%%00010%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00009// for normal categories and also for the Missing values category (if it's included in the view)%%00010%%00009%%00009%%00009%%00009%%00009// we fill the map of excluded bars (grouped by freq cols) - needed for Stacked plot%%00010%%00009%%00009%%00009%%00009%%00009if (cat !== null || _value.options.includeMissValCat) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009cols.forEach(function(col) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009if (excludeFreqColCatMap[col] != undefined) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009%%00009excludeFreqColCatMap[col].push(cat);%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009%%00009excludeFreqColCatMap[col] = [cat];%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00009%%00009});%%00010%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009}%%00010%%00009%%00009}%%00010%%00009%%00009// exclude smth from Missing values category, if it's included in the view%%00010%%00009%%00009if (_value.options.includeMissValCat &amp;&amp; _representation.options.reportOnMissingValues) {%%00010%%00009%%00009%%00009if (excludeWholeMissValCat) {%%00010%%00009%%00009%%00009%%00009excludeCats.push(MISSING_VALUES_LABEL);%%00010%%00009%%00009%%00009} else if (missValCatBars !== undefined) {%%00010%%00009%%00009%%00009%%00009excludeBars.push(missValCatBars);%%00010%%00009%%00009%%00009}%%00010%%00009%%00009}%%00010%%00009%%00009%%00010%%00009%%00009// Add or remove the non-missing values of the Missing values category%%00010%%00009%%00009for (var i = 0; i &lt; missValCatValues.length; i++) {%%00010%%00009%%00009%%00009var item = missValCatValues[i];%%00010%%00009%%00009%%00009if (excludeCols.indexOf(item.col) != -1 &amp;&amp; !(!_value.options.includeMissValCat &amp;&amp; switched)) {%%00010%%00009%%00009%%00009%%00009// Fact that the freq col is in missValCatValues means it has a non-missing value in Missing values category.%%00010%%00009%%00009%%00009%%00009// If this col was excluded, that means it has only missing values in all other categories AND we &quot;don't include MissValCat&quot;.%%00010%%00009%%00009%%00009%%00009// In case it's the first time the plot is building, we don't need to do anything - call continue.%%00010%%00009%%00009%%00009%%00009// But if a user switched the option &quot;includeMissValCat&quot; from 'on' to 'off', we need to remove the value of MissValCat from the plot further below. %%00010%%00009%%00009%%00009%%00009continue;%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009// find if the plot has already the data (key-&gt;values) for the current  freq col == key%%00010%%00009%%00009%%00009var data = undefined;%%00010%%00009%%00009%%00009var dataInd;%%00010%%00009%%00009%%00009for (var j = 0; j &lt; plotData.length; j++) {  // many thanks to IE - we cannot use find() or findIndex() here %%00010%%00009%%00009%%00009%%00009if (plotData[j].key == item.col) {%%00010%%00009%%00009%%00009%%00009%%00009data = plotData[j];%%00010%%00009%%00009%%00009%%00009%%00009dataInd = j;%%00010%%00009%%00009%%00009%%00009%%00009break;%%00010%%00009%%00009%%00009%%00009}%%00009%%00010%%00009%%00009%%00009}%%00009%%00009%%00009%%00010%%00009%%00009%%00009if (_value.options.includeMissValCat &amp;&amp; _representation.options.reportOnMissingValues) {%%00010%%00009%%00009%%00009%%00009// if we include Missing values category to the view, we need to add its values%%00010%%00009%%00009%%00009%%00009var val = {&quot;x&quot;: MISSING_VALUES_LABEL, &quot;y&quot;: item.value};%%00010%%00009%%00009%%00009%%00009if (data !== undefined) {%%00010%%00009%%00009%%00009%%00009%%00009data.values.push(val);%%00010%%00009%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009%%00009plotData.push({&quot;key&quot;: item.col, &quot;values&quot;: [val]})%%00010%%00009%%00009%%00009%%00009}%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009} else if (switched) {%%00010%%00009%%00009%%00009%%00009// if we don't include Missing values category to the view AND this option was switched in the view, we need to remove its value%%00010%%00009%%00009%%00009%%00009if (data !== undefined) {%%00010%%00009%%00009%%00009%%00009%%00009data.values.pop();%%00010%%00009%%00009%%00009%%00009%%00009if (data.values.length == 0) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009plotData.splice(dataInd, 1);%%00010%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009}%%00009%%00009%%00009%%00010%%00009%%00009%%00009}%%00010%%00009%%00009}%%00009%%00009%%00010%%00009%%00009%%00010%%00009%%00009// Set warning messages%%00010        if (!showWarnings) {%%00010            return;%%00010        }%%00010%%00009%%00009if (plotData.length == 0) {%%00010%%00009%%00009%%00009// No data available warnings%%00010%%00009%%00009%%00009var str;%%00010%%00009%%00009%%00009if (missValCatValues.length != 0 &amp;&amp; _representation.options.reportOnMissingValues) {%%00010%%00009%%00009%%00009%%00009str = &quot;No chart was generated since all frequency columns have only missing values.\nThere are values where the category name is missing.\nTo see them switch on the option \&quot;Include 'Missing values' category\&quot; in the view settings.&quot;;%%00010%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009str = &quot;No chart was generated since all frequency columns have only missing values or empty.\nRe-run the workflow with different data.&quot;;%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009knimeService.setWarningMessage(str, NO_DATA_AVAILABLE);%%00010%%00009%%00009} else {%%00010%%00009%%00009%%00009knimeService.clearWarningMessage(NO_DATA_AVAILABLE);%%00010%%00009%%00009%%00009// All other warnings%%00010%%00009%%00009%%00009if (excludeCols.length &gt; 0 &amp;&amp; _representation.options.reportOnMissingValues) {%%00010%%00009%%00009%%00009%%00009knimeService.setWarningMessage(&quot;Following frequency columns are not present or contain only missing values and were excluded from the view:\n    &quot; + excludeCols.join(&quot;, &quot;), FREQ_COLUMN_MISSING_VALUES_ONLY);%%00010%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009knimeService.clearWarningMessage(FREQ_COLUMN_MISSING_VALUES_ONLY);%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009if (excludeCats.length &gt; 0 &amp;&amp; _representation.options.reportOnMissingValues) {%%00010%%00009%%00009%%00009%%00009knimeService.setWarningMessage(&quot;Following categories contain only missing values and were excluded from the view:\n    &quot; + excludeCats.join(&quot;, &quot;), CATEGORY_MISSING_VALUES_ONLY);%%00010%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009knimeService.clearWarningMessage(CATEGORY_MISSING_VALUES_ONLY);%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009if (excludeBars.length &gt; 0 &amp;&amp; _representation.options.reportOnMissingValues) {%%00010%%00009%%00009%%00009%%00009knimeService.setWarningMessage(&quot;Following bars contain only missing values in frequency column and were excluded from the view:\n    &quot; + excludeBars.join(&quot;\n    &quot;), MISSING_VALUES_ONLY);%%00010%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009knimeService.clearWarningMessage(MISSING_VALUES_ONLY);%%00010%%00009%%00009%%00009}%%00010%%00009%%00009}%%00010%%00009}%%00010%%00009%%00010%%00009/**%%00010%%00009 * This is a workaround for the stacked plot problem coming from the nvd3 library implementation.%%00010%%00009 * They do not really support missing values in the Stacked option:%%00010%%00009 *   (https://github.com/novus/nvd3/issues/1941 - &quot;The solution is to adjust your data before handing it to nvd3.&quot; - nice answer)%%00010%%00009 * The implementation uses a simple d3.layout.stack which requires all data have the same length (https://github.com/d3/d3-3.x-api-reference/blob/master/Stack-Layout.md#_stack)%%00010%%00009 * Missing values may lead to different lengths.%%00010%%00009 * A workaround here is to add dummy null values in place of excluded bars before drawing to Stacked plot. And remove them before switching to Grouped plot. %%00010%%00009 */%%00010%%00009fixStackedData = function(addDummy) {%%00010%%00009%%00009plotData.forEach(function(dataValues) {%%00010%%00009%%00009%%00009var excludeCats = excludeFreqColCatMap[dataValues.key];%%00010%%00009%%00009%%00009if (excludeCats == undefined) {%%00010%%00009%%00009%%00009%%00009// if this freq col does not have excluded bars at all - nothing to do%%00010%%00009%%00009%%00009%%00009return;%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009if (addDummy) {%%00010%%00009%%00009%%00009%%00009// Another implementation thing is that the categories in every freq col must follow the same order.%%00010%%00009%%00009%%00009%%00009// So we cannot simply append dummy nulls to the end.%%00010%%00009%%00009%%00009%%00009// Instead we need to replace the whole &quot;values&quot; array.%%00010%%00009%%00009%%00009%%00009// We go over the categories and add either a real value or a dummy null depending on what's present. %%00010%%00009%%00009%%00009%%00009var i = 0, j = 0;%%00010%%00009%%00009%%00009%%00009var values = dataValues.values;%%00010%%00009%%00009%%00009%%00009var newValues = [];%%00010%%00009%%00009%%00009%%00009categories.forEach(function(cat) {%%00010%%00009%%00009%%00009%%00009%%00009if (cat == null) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009return;%%00010%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00009if (i &lt; values.length &amp;&amp; values[i].x == cat) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009newValues.push(values[i]);%%00010%%00009%%00009%%00009%%00009%%00009%%00009i++;%%00010%%00009%%00009%%00009%%00009%%00009} else if (j &lt; excludeCats.length &amp;&amp; excludeCats[j] == cat) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009newValues.push({&quot;x&quot;: cat, &quot;y&quot;: null});%%00010%%00009%%00009%%00009%%00009%%00009%%00009j++;%%00010%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009});%%00010%%00009%%00009%%00009%%00009if (i &lt; values.length &amp;&amp; values[i].x == MISSING_VALUES_LABEL) {%%00010%%00009%%00009%%00009%%00009%%00009newValues.push(values[i]);%%00010%%00009%%00009%%00009%%00009} else if (j &lt; excludeCats.length &amp;&amp; excludeCats[j] == null) {%%00010%%00009%%00009%%00009%%00009%%00009newValues.push({&quot;x&quot;: MISSING_VALUES_LABEL, &quot;y&quot;: null});%%00009%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009dataValues.values = newValues;%%00010%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009// remove dummy null values (basically any null values as there can be no other nulls)%%00010%%00009%%00009%%00009%%00009dataValues.values = dataValues.values.filter(function(value) {%%00010%%00009%%00009%%00009%%00009%%00009return value.y !== null;%%00010%%00009%%00009%%00009%%00009});%%00010%%00009%%00009%%00009}%%00010%%00009%%00009});%%00010%%00009}%%00010%%00009%%00010%%00009function updateTitles(updateChart) {%%00010%%00009%%00009if (chart) {%%00010%%00009%%00009%%00009var curTitle = d3.select(&quot;#title&quot;);%%00010%%00009%%00009%%00009var curSubtitle = d3.select(&quot;#subtitle&quot;);%%00010%%00009%%00009%%00009var chartNeedsUpdating = curTitle.empty() != !(_value.options.title) %%00010%%00009%%00009%%00009%%00009|| curSubtitle.empty() != !(_value.options.subtitle);%%00010%%00009%%00009%%00009if (!_value.options.title) {%%00010%%00009%%00009%%00009%%00009curTitle.remove();%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009if (_value.options.title) {%%00010%%00009%%00009%%00009%%00009if (curTitle.empty()) {%%00010%%00009%%00009%%00009%%00009%%00009svg.append(&quot;text&quot;)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.attr(&quot;x&quot;, 20)             %%00010%%00009%%00009%%00009%%00009%%00009%%00009.attr(&quot;y&quot;, 30)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.attr(&quot;font-size&quot;, 24)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.attr(&quot;id&quot;, &quot;title&quot;)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.text(_value.options.title);%%00010%%00009%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009%%00009curTitle.text(_value.options.title);%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009if (!_value.options.subtitle) {%%00010%%00009%%00009%%00009%%00009curSubtitle.remove();%%00010%%00009%%00009%%00009} %%00010%%00009%%00009%%00009if (_value.options.subtitle) {%%00010%%00009%%00009%%00009%%00009if (curSubtitle.empty()) {%%00010%%00009%%00009%%00009%%00009%%00009svg.append(&quot;text&quot;)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.attr(&quot;x&quot;, 20)             %%00010%%00009%%00009%%00009%%00009%%00009%%00009.attr(&quot;y&quot;, _value.options.title ? 46 : 20)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.attr(&quot;font-size&quot;, 12)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.attr(&quot;id&quot;, &quot;subtitle&quot;)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.text(_value.options.subtitle);%%00010%%00009%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009%%00009curSubtitle.text(_value.options.subtitle)%%00010%%00009%%00009%%00009%%00009%%00009.attr(&quot;y&quot;, _value.options.title ? 46 : 20);%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009var topMargin = 10;%%00010%%00009%%00009%%00009topMargin += _value.options.title ? 10 : 0;%%00010%%00009%%00009%%00009topMargin += _value.options.subtitle ? 8 : 0;%%00010%%00009%%00009%%00009chart.legend.margin({top: topMargin, bottom: topMargin});%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009var isTitle = _value.options.title || _value.options.subtitle;%%00010%%00009%%00009%%00009knimeService.floatingHeader(isTitle);%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009if (updateChart &amp;&amp; chartNeedsUpdating) {%%00010%%00009%%00009%%00009%%00009if (_representation.options.svg.fullscreen &amp;&amp; _representation.runningInView ) {%%00010%%00009%%00009%%00009%%00009%%00009var height = (isTitle) ? &quot;100%&quot; : &quot;calc(100% - &quot; + knimeService.headerHeight() + &quot;px)&quot;;%%00010%%00009%%00009%%00009%%00009%%00009layoutContainer.style(&quot;height&quot;, height)%%00010%%00009%%00009%%00009%%00009%%00009%%00009// two rows below force to invalidate the container which solves a weird problem with vertical scroll bar in IE%%00010%%00009%%00009%%00009%%00009%%00009%%00009.style('display', 'none')%%00010%%00009%%00009%%00009%%00009%%00009%%00009.style('display', 'block');%%00010%%00009%%00009%%00009%%00009%%00009d3.select(&quot;#svgContainer&quot;).style(&quot;height&quot;, height); %%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009chart.update();%%00010%%00009%%00009%%00009}%%00010%%00009%%00009}%%00010%%00009}%%00010%%00009%%00010%%00009function updateAxisLabels(updateChart) {%%00010%%00009%%00009if (chart) {%%00010%%00009%%00009%%00009var optOrientation = _value.options[&quot;orientation&quot;];%%00010%%00009%%00009%%00009var optStaggerLabels = _value.options[&quot;staggerLabels&quot;];%%00010%%00009%%00009%%00009var curCatAxisLabel, curFreqAxisLabel;%%00010%%00009%%00009%%00009var curCatAxisLabelElement = d3.select(&quot;.nv-x.nv-axis .nv-axis-label&quot;);%%00010%%00009%%00009%%00009var curFreqAxisLabelElement = d3.select(&quot;.nv-y.nv-axis .nv-axis-label&quot;);%%00010%%00009%%00009%%00009if (!curCatAxisLabelElement.empty()) {%%00010%%00009%%00009%%00009%%00009curCatAxisLabel = curCatAxisLabelElement.text();%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009if (!curFreqAxisLabelElement.empty()) {%%00010%%00009%%00009%%00009%%00009curFreqAxisLabel = curCatAxisLabelElement.text();%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009var chartNeedsUpdating = curCatAxisLabel != _value.options.catLabel%%00010%%00009%%00009%%00009%%00009|| curFreqAxisLabel != _value.options.freqLabel;%%00010%%00009%%00009%%00009if (!chartNeedsUpdating) return;%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009chart.xAxis%%00010%%00009%%00009%%00009%%00009.axisLabel(_value.options.catLabel)%%00010%%00009%%00009%%00009%%00009.axisLabelDistance(optOrientation ? 30 : optStaggerLabels ? 10 : -5)%%00010%%00009%%00009%%00009%%00009.showMaxMin(false);%%00010%%00010%%00009%%00009%%00009// tick format needed?%%00010%%00009%%00009%%00009chart.yAxis%%00010%%00009%%00009%%00009%%00009.axisLabel(_value.options.freqLabel)%%00010%%00009%%00009%%00009%%00009.axisLabelDistance(optOrientation ? -5 : 0)%%00010%%00009%%00009%%00009%%00009/*.tickFormat(d3.format(',.01f'))*/;%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009var leftMargin = optOrientation ? 100 : 70;%%00010%%00009%%00009%%00009var bottomMargin = 35;%%00010%%00009%%00009%%00009if (!_value.options.catLabel) {%%00010%%00009%%00009%%00009%%00009bottomMargin = optOrientation ? bottomMargin : 25;%%00010%%00009%%00009%%00009%%00009leftMargin = optOrientation ? 70 : leftMargin;%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009if (!_value.options.freqLabel) {%%00010%%00009%%00009%%00009%%00009bottomMargin = optOrientation ? 25 : bottomMargin;%%00010%%00009%%00009%%00009%%00009leftMargin = optOrientation ? leftMargin : 50;%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009if (!optOrientation) {%%00010%%00009%%00009%%00009%%00009chart.staggerLabels(optStaggerLabels);%%00010%%00009%%00009%%00009%%00009if (optStaggerLabels) {%%00010%%00009%%00009%%00009%%00009%%00009bottomMargin += _value.options.catLabel ? 25 : 15;%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009chart.margin({left: leftMargin, bottom: bottomMargin})%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009if (updateChart) {%%00010%%00009%%00009%%00009%%00009chart.update();%%00010%%00009%%00009%%00009}%%00010%%00009%%00009}%%00010%%00009}%%00010%%00009%%00010%%00009function updateChartType() {%%00010%%00009%%00009if (this.value != _value.options.chartType) {%%00010%%00009%%00009%%00009_value.options.chartType = this.value;%%00010%%00009%%00009%%00009var stacked = this.value == 'Stacked';%%00010%%00009%%00009%%00009fixStackedData(stacked);%%00010%%00009%%00009%%00009chart.stacked(stacked);%%00009%%00009%%00009%%00009%%00009%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009chart.update();%%00010%%00009%%00009}%%00009%%00009%%00010%%00009}%%00010%%00009%%00010%%00009drawControls = function() {%%00009%%00009%%00010%%00009%%00009if (!knimeService) {%%00010%%00009%%00009%%00009// TODO: error handling?%%00010%%00009%%00009%%00009return;%%00010%%00009%%00009}%%00010%%00009%%00009%%00010%%00009%%00009if (_representation.displayFullscreenButton) {%%00010%%00009%%00009%%00009knimeService.allowFullscreen();%%00010%%00009%%00009}%%00010%%00009%%00009%%00010%%00009    if (!_representation.options.enableViewControls) return;%%00010%%00009    %%00010%%00009    var titleEdit = _representation.options.enableTitleEdit;%%00010%%00009    var subtitleEdit = _representation.options.enableSubtitleEdit;%%00010%%00009    var axisEdit = _representation.options.enableAxisEdit;%%00010%%00009    var chartTypeEdit =  _representation.options.enableStackedEdit;%%00010%%00009    var orientationEdit = _representation.options.enableHorizontalToggle;%%00010%%00009%%00009var staggerLabels = _representation.options.enableStaggerToggle;%%00010%%00009%%00009var switchMissValCat = _representation.options.enableSwitchMissValCat;%%00010%%00009    %%00010%%00009    if (titleEdit || subtitleEdit) {%%00009    %%00009    %%00010%%00009    %%00009if (titleEdit) {%%00010%%00009    %%00009%%00009var chartTitleText = knimeService.createMenuTextField('chartTitleText', _value.options.title, function() {%%00010%%00009    %%00009%%00009%%00009if (_value.options.title != this.value) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009_value.options.title = this.value;%%00010%%00009%%00009%%00009%%00009%%00009%%00009updateTitles(true);%%00010%%00009%%00009%%00009%%00009%%00009}%%00010%%00009    %%00009%%00009}, true);%%00010%%00009    %%00009%%00009knimeService.addMenuItem('Chart Title:', 'header', chartTitleText);%%00010%%00009    %%00009}%%00010%%00009    %%00009if (subtitleEdit) {%%00010%%00009    %%00009%%00009var chartSubtitleText = knimeService.createMenuTextField('chartSubtitleText', _value.options.subtitle, function() {%%00010%%00009    %%00009%%00009%%00009if (_value.options.subtitle != this.value) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009_value.options.subtitle = this.value;%%00010%%00009%%00009%%00009%%00009%%00009%%00009updateTitles(true);%%00010%%00009%%00009%%00009%%00009%%00009}%%00010%%00009    %%00009%%00009}, true);%%00010%%00009    %%00009%%00009var mi = knimeService.addMenuItem('Chart Subtitle:', 'header', chartSubtitleText, null, knimeService.SMALL_ICON);%%00010%%00009    %%00009}%%00009%%00010%%00009    %%00009if (axisEdit || orientationEdit || staggerLabels) {%%00010%%00009    %%00009%%00009knimeService.addMenuDivider();%%00010%%00009    %%00009}%%00010%%00009    }%%00010%%00009    %%00010%%00009    if (axisEdit) {%%00010%%00009    %%00009var catAxisText = knimeService.createMenuTextField('catAxisText', _value.options.catLabel, function() {%%00010%%00009    %%00009%%00009_value.options.catLabel = this.value;%%00010%%00009%%00009%%00009%%00009updateAxisLabels(true);%%00010%%00009    %%00009}, true);%%00010    %%00009%%00009knimeService.addMenuItem('Category axis label:', 'ellipsis-h', catAxisText);%%00010    %%00009%%00009%%00010    %%00009%%00009var freqAxisText = knimeService.createMenuTextField('freqAxisText', _value.options.freqLabel, function() {%%00010    %%00009%%00009%%00009_value.options.freqLabel = this.value;%%00010%%00009%%00009%%00009%%00009updateAxisLabels(true);%%00010    %%00009%%00009}, true);    %%00009%%00009%%00010    %%00009%%00009knimeService.addMenuItem('Frequency axis label:', 'ellipsis-v', freqAxisText);%%00010    %%00009%%00009%%00010    %%00009%%00009if (switchMissValCat || orientationEdit || staggerLabels || chartTypeEdit) {%%00010    %%00009%%00009%%00009knimeService.addMenuDivider();%%00010    %%00009%%00009}%%00010    %%00009}%%00010%%00009    %%00010%%00009    if (switchMissValCat &amp;&amp; isMissValCat &amp;&amp; _representation.options.reportOnMissingValues) {%%00010%%00009    %%00009var switchMissValCatCbx = knimeService.createMenuCheckbox('switchMissValCatCbx', _value.options.includeMissValCat, function() {%%00010%%00009    %%00009%%00009if (_value.options.includeMissValCat != this.checked) {%%00010%%00009    %%00009%%00009%%00009_value.options.includeMissValCat = this.checked;%%00010%%00009    %%00009%%00009%%00009var stacked = _value.options.chartType == 'Stacked';%%00010%%00009    %%00009%%00009%%00009if (stacked) {%%00010%%00009    %%00009%%00009%%00009%%00009fixStackedData(false);%%00010%%00009    %%00009%%00009%%00009}%%00010%%00009    %%00009%%00009%%00009processMissingValues(true);%%00010%%00009    %%00009%%00009%%00009if (stacked) {%%00010%%00009    %%00009%%00009%%00009%%00009fixStackedData(true);%%00010%%00009    %%00009%%00009%%00009}%%00010%%00009    %%00009%%00009%%00009chart.update();%%00010%%00009    %%00009%%00009}%%00010%%00009    %%00009});%%00010%%00009    %%00009knimeService.addMenuItem(&quot;Include 'Missing values' category: &quot;, 'question', switchMissValCatCbx);%%00010%%00009    %%00009%%00010%%00009    %%00009if (orientationEdit || staggerLabels || chartTypeEdit) {%%00010%%00009    %%00009%%00009knimeService.addMenuDivider();%%00010%%00009    %%00009}%%00010%%00009    }%%00010%%00009    %%00010%%00009    if (chartTypeEdit) {%%00010%%00009    %%00009var groupedRadio = knimeService.createMenuRadioButton('groupedRadio', 'chartType', 'Grouped', updateChartType);%%00009    %%00009%%00010%%00009    %%00009groupedRadio.checked = (_value.options.chartType == groupedRadio.value);%%00010%%00009    %%00009knimeService.addMenuItem('Grouped:', 'align-left fa-rotate-270', groupedRadio);%%00009    %%00009%%00010%%00009    %%00009%%00010%%00009    %%00009var stackedRadio = knimeService.createMenuRadioButton('stackedRadio', 'chartType', 'Stacked', updateChartType);%%00010%%00009    %%00009stackedRadio.checked = (_value.options.chartType == stackedRadio.value);%%00010%%00009    %%00009knimeService.addMenuItem('Stacked:', 'tasks fa-rotate-270', stackedRadio);%%00010%%00009    %%00009%%00010%%00009    %%00009if (orientationEdit || staggerLabels) {%%00010    %%00009%%00009%%00009knimeService.addMenuDivider();%%00010    %%00009%%00009}%%00010%%00009    }%%00010%%00009    %%00010%%00009    if (orientationEdit) {%%00010%%00009    %%00009var orientationCbx = knimeService.createMenuCheckbox('orientationCbx', _value.options.orientation, function () {%%00010%%00009    %%00009%%00009if (_value.options.orientation != this.checked) {%%00010%%00009%%00009%%00009%%00009%%00009_value.options.orientation = this.checked;%%00010%%00009%%00009%%00009%%00009%%00009d3.select(&quot;#staggerCbx&quot;).property(&quot;disabled&quot;, this.checked);%%00010%%00009%%00009%%00009%%00009%%00009drawChart(true);%%00010%%00009%%00009%%00009%%00009}%%00010%%00009    %%00009});%%00010%%00009    %%00009knimeService.addMenuItem('Plot horizontal bar chart:', 'align-left', orientationCbx);%%00010%%00009    }%%00010%%00009    %%00010%%00009    if (staggerLabels) {%%00010%%00009    %%00009var staggerCbx = knimeService.createMenuCheckbox('staggerCbx', _value.options.staggerLabels, function () {%%00010    %%00009%%00009%%00009if (_value.options.staggerLabels != this.checked) {%%00010%%00009%%00009%%00009%%00009%%00009_value.options.staggerLabels = this.checked;%%00010%%00009%%00009%%00009%%00009%%00009drawChart(true);%%00010%%00009%%00009%%00009%%00009}%%00010%%00009    %%00009});%%00010%%00009    %%00009staggerCbx.disabled = _value.options.orientation;%%00010%%00009    %%00009knimeService.addMenuItem('Stagger labels:', 'map-o', staggerCbx);%%00010%%00009    }%%00010%%00009};%%00010%%00010%%00009/*function createControls(controlsContainer) {%%00010%%00009%%00009if (_representation.options.enableViewControls) {%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009var controlTable = controlsContainer.append(&quot;table&quot;)%%00010%%00009    %%00009%%00009.attr(&quot;id&quot;, &quot;barControls&quot;)%%00010%%00009    %%00009%%00009.style(&quot;padding&quot;, &quot;10px&quot;)%%00010%%00009    %%00009%%00009.style(&quot;margin&quot;, &quot;0 auto&quot;)%%00010%%00009    %%00009%%00009.style(&quot;box-sizing&quot;, &quot;border-box&quot;)%%00010%%00009    %%00009%%00009.style(&quot;font-family&quot;, &quot;sans-serif&quot;)%%00010%%00009    %%00009%%00009.style(&quot;font-size&quot;, &quot;12px&quot;)%%00010%%00009    %%00009%%00009.style(&quot;border-spacing&quot;, 0)%%00010%%00009    %%00009%%00009.style(&quot;border-collapse&quot;, &quot;collapse&quot;);%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009var orientationEdit = _representation.options.enableHorizontalToggle;%%00010%%00009%%00009%%00009var staggerLabels = _representation.options.enableStaggerToggle;%%00010%%00009%%00009%%00009var categoryEdit = _representation.options.enableCategoryChooser;%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009if (orientationEdit || staggerLabels) {%%00010%%00009%%00009%%00009%%00009var orientationContainer = controlTable.append(&quot;tr&quot;);%%00010%%00009%%00009%%00009%%00009if (orientationEdit) {%%00010%%00009%%00009%%00009%%00009%%00009orientationContainer.append(&quot;td&quot;).append(&quot;label&quot;).attr(&quot;for&quot;, &quot;orientation&quot;).text(&quot;Plot horizontal bar chart:&quot;).style(&quot;margin&quot;, &quot;0 5px&quot;);%%00010%%00009%%00009    %%00009%%00009var orientationCheckbox = orientationContainer.append(&quot;td&quot;).append(&quot;input&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.attr(&quot;type&quot;, &quot;checkbox&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.attr(&quot;id&quot;, &quot;orientation&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.style(&quot;margin-right&quot;, &quot;15px&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.property(&quot;checked&quot;, _value.options.orientation)%%00010%%00009    %%00009%%00009%%00009%%00009.on(&quot;click&quot;, function() {%%00010%%00009    %%00009%%00009%%00009%%00009%%00009if (_value.options[&quot;orientation&quot;] != this.checked) {%%00010%%00009    %%00009%%00009%%00009%%00009%%00009%%00009_value.options[&quot;orientation&quot;] = this.checked;%%00010%%00009    %%00009%%00009%%00009%%00009%%00009%%00009d3.select(&quot;#stagger&quot;).property(&quot;disabled&quot;, this.checked);%%00010%%00009    %%00009%%00009%%00009%%00009%%00009%%00009drawChart(true);%%00010%%00009    %%00009%%00009%%00009%%00009%%00009}%%00010%%00009    %%00009%%00009%%00009%%00009});%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009if (staggerLabels) {%%00010%%00009%%00009%%00009%%00009%%00009orientationContainer.append(&quot;td&quot;).append(&quot;label&quot;).attr(&quot;for&quot;, &quot;stagger&quot;).text(&quot;Stagger labels:&quot;).style(&quot;margin&quot;, &quot;0 5px&quot;);%%00010%%00009%%00009    %%00009%%00009var staggerCheckbox = orientationContainer.append(&quot;td&quot;).append(&quot;input&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.attr(&quot;type&quot;, &quot;checkbox&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.attr(&quot;id&quot;, &quot;stagger&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.style(&quot;margin-right&quot;, &quot;15px&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.property(&quot;checked&quot;, _value.options.staggerLabels)%%00010%%00009    %%00009%%00009%%00009%%00009.property(&quot;disabled&quot;, _value.options[&quot;orientation&quot;])%%00010%%00009    %%00009%%00009%%00009%%00009.on(&quot;click&quot;, function() {%%00010%%00009    %%00009%%00009%%00009%%00009%%00009if (_value.options.staggerLabels != this.checked) {%%00010%%00009    %%00009%%00009%%00009%%00009%%00009%%00009_value.options.staggerLabels = this.checked;%%00010%%00009    %%00009%%00009%%00009%%00009%%00009%%00009drawChart(true);%%00010%%00009    %%00009%%00009%%00009%%00009%%00009}%%00010%%00009    %%00009%%00009%%00009%%00009});%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009var titleEdit = _representation.options.enableTitleEdit;%%00010%%00009%%00009%%00009var subtitleEdit = _representation.options.enableSubtitleEdit;%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009if (titleEdit || subtitleEdit) {%%00010%%00009%%00009%%00009%%00009var titleEditContainer = controlTable.append(&quot;tr&quot;);%%00010%%00009%%00009    %%00009if (titleEdit) {%%00010%%00009%%00009    %%00009%%00009titleEditContainer.append(&quot;td&quot;).append(&quot;label&quot;).attr(&quot;for&quot;, &quot;chartTitleText&quot;).text(&quot;Chart Title:&quot;).style(&quot;margin&quot;, &quot;0 5px&quot;);%%00010%%00009%%00009    %%00009%%00009var chartTitleText = titleEditContainer.append(&quot;td&quot;).append(&quot;input&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.attr(&quot;type&quot;, &quot;text&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.attr(&quot;id&quot;, &quot;chartTitleText&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.attr(&quot;name&quot;, &quot;chartTitleText&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.attr(&quot;value&quot;, _value.options.title)%%00010%%00009    %%00009%%00009%%00009%%00009.style(&quot;font-family&quot;, &quot;sans-serif&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.style(&quot;font-size&quot;, &quot;12px&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.style(&quot;width&quot;, &quot;150px&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.style(&quot;margin-right&quot;, &quot;15px&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.on(&quot;keyup&quot;, function() {%%00010%%00009    %%00009%%00009%%00009%%00009%%00009if (_value.options.title != this.value) {%%00010%%00009    %%00009%%00009%%00009%%00009%%00009%%00009_value.options.title = this.value;%%00010%%00009    %%00009%%00009%%00009%%00009%%00009%%00009updateTitles(true);%%00010%%00009    %%00009%%00009%%00009%%00009%%00009}%%00010%%00009    %%00009%%00009%%00009});%%00010%%00009%%00009    %%00009}%%00010%%00009%%00009    %%00009if (subtitleEdit) {%%00010%%00009%%00009    %%00009%%00009titleEditContainer.append(&quot;td&quot;).append(&quot;label&quot;).attr(&quot;for&quot;, &quot;chartSubtitleText&quot;).text(&quot;Chart Subtitle:&quot;).style(&quot;margin&quot;, &quot;0 5px&quot;);%%00010%%00009%%00009    %%00009%%00009var chartTitleText = titleEditContainer.append(&quot;td&quot;).append(&quot;input&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.attr(&quot;type&quot;, &quot;text&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.attr(&quot;id&quot;, &quot;chartSubtitleText&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.attr(&quot;name&quot;, &quot;chartSubtitleText&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.attr(&quot;value&quot;, _value.options.subtitle)%%00010%%00009    %%00009%%00009%%00009%%00009.style(&quot;font-family&quot;, &quot;sans-serif&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.style(&quot;font-size&quot;, &quot;12px&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.style(&quot;width&quot;, &quot;150px&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.style(&quot;margin-right&quot;, &quot;15px&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.on(&quot;keyup&quot;, function() {%%00010%%00009    %%00009%%00009%%00009%%00009%%00009if (_value.options.subtitle != this.value) {%%00010%%00009    %%00009%%00009%%00009%%00009%%00009%%00009_value.options.subtitle = this.value;%%00010%%00009    %%00009%%00009%%00009%%00009%%00009%%00009updateTitles(true);%%00010%%00009    %%00009%%00009%%00009%%00009%%00009}%%00010%%00009    %%00009%%00009%%00009});%%00010%%00009%%00009    %%00009}%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009if (_representation.options.enableAxisEdit) {%%00010%%00009%%00009%%00009%%00009var axisContainer = controlTable.append(&quot;tr&quot;);%%00010%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009axisContainer.append(&quot;td&quot;).append(&quot;label&quot;).attr(&quot;for&quot;, &quot;catAxisLabel&quot;).text(&quot;fre:&quot;).style(&quot;margin&quot;, &quot;0 5px&quot;);%%00010%%00009%%00009%%00009%%00009var categoryBox = axisContainer.append(&quot;td&quot;).append(&quot;input&quot;)%%00010%%00009%%00009%%00009%%00009%%00009.attr(&quot;id&quot;, &quot;catAxisLabel&quot;)%%00010%%00009%%00009%%00009%%00009%%00009.attr(&quot;type&quot;, &quot;text&quot;)%%00010%%00009%%00009%%00009%%00009%%00009.attr(&quot;value&quot;, _value.options.catLabel)%%00010%%00009%%00009%%00009%%00009%%00009.style(&quot;width&quot;, &quot;150px&quot;)%%00010%%00009%%00009%%00009%%00009%%00009.style(&quot;margin-right&quot;, &quot;15px&quot;)%%00010%%00009%%00009%%00009%%00009%%00009.on(&quot;keyup&quot;, function() {%%00010%%00009%%00009%%00009%%00009%%00009%%00009_value.options.catLabel = this.value;%%00010%%00009%%00009%%00009%%00009%%00009%%00009updateAxisLabels(true);%%00010%%00009%%00009%%00009%%00009%%00009});%%00010%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009axisContainer.append(&quot;td&quot;).append(&quot;label&quot;).attr(&quot;for&quot;, &quot;freqAxisLabel&quot;).text(&quot;Frequency axis label:&quot;).style(&quot;margin&quot;, &quot;0 5px&quot;);%%00010%%00009%%00009%%00009%%00009var categoryBox = axisContainer.append(&quot;td&quot;).append(&quot;input&quot;)%%00010%%00009%%00009%%00009%%00009%%00009.attr(&quot;id&quot;, &quot;freqAxisLabel&quot;)%%00010%%00009%%00009%%00009%%00009%%00009.attr(&quot;type&quot;, &quot;text&quot;)%%00010%%00009%%00009%%00009%%00009%%00009.attr(&quot;value&quot;, _value.options.freqLabel)%%00010%%00009%%00009%%00009%%00009%%00009.style(&quot;width&quot;, &quot;150px&quot;)%%00010%%00009%%00009%%00009%%00009%%00009.style(&quot;margin-right&quot;, &quot;15px&quot;)%%00010%%00009%%00009%%00009%%00009%%00009.on(&quot;keyup&quot;, function() {%%00010%%00009%%00009%%00009%%00009%%00009%%00009_value.options.freqLabel = this.value;%%00010%%00009%%00009%%00009%%00009%%00009%%00009updateAxisLabels(true);%%00010%%00009%%00009%%00009%%00009%%00009});%%00010%%00009%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009if (d3.selectAll(&quot;#controlContainer table *&quot;).empty()) {%%00010%%00009%%00009%%00009%%00009controlContainer.remove();%%00010%%00009%%00009%%00009}%%00010%%00009%%00009}%%00010%%00009}*/%%00010%%00010%%00009barchart.validate = function() {%%00010%%00009%%00009return true;%%00010%%00009}%%00010%%00010%%00009barchart.getComponentValue = function() {%%00010%%00009%%00009return _value;%%00010%%00009}%%00010%%00010%%00009barchart.getSVG = function() {%%00010%%00009%%00009// inline global style declarations for SVG export%%00010%%00009%%00009var styles = document.styleSheets;%%00010%%00009%%00009for (i = 0; i &lt; styles.length; i++) {%%00010%%00009%%00009%%00009if (!styles[i].cssRules &amp;&amp; styles[i].rules) {%%00010%%00009%%00009%%00009%%00009styles[i].cssRules = styles[i].rules;%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009// empty style declaration%%00010%%00009%%00009%%00009if (!styles[i].cssRules) continue;%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009for (var j = 0; j &lt; styles[i].cssRules.length; j++) {%%00010%%00009%%00009%%00009%%00009try {%%00010%%00009%%00009%%00009%%00009%%00009var rule = styles[i].cssRules[j];%%00010%%00009%%00009%%00009%%00009%%00009d3.selectAll(rule.selectorText).each(function(){%%00010%%00009%%00009%%00009%%00009%%00009%%00009for (var k = 0; k &lt; rule.style.length; k++) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009var curStyle = this.style.getPropertyValue(rule.style[k]);%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009var curPrio = this.style.getPropertyPriority(rule.style[k]);%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009var rulePrio = rule.style.getPropertyPriority(rule.style[k]);%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009//only overwrite style if not set or priority is overruled%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009if (!curStyle || (curPrio != &quot;important&quot; &amp;&amp; rulePrio == &quot;important&quot;)) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009%%00009d3.select(this).style(rule.style[k], rule.style[rule.style[k]]);%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00009});%%00010%%00009%%00009%%00009%%00009} catch(exception) {%%00010%%00009%%00009%%00009%%00009%%00009continue;%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009}%%00010%%00009%%00009}%%00010%%00009%%00009var svgElement = d3.select(&quot;svg&quot;)[0][0];%%00010%%00009%%00009// Return the SVG as a string.%%00010%%00009%%00009return (new XMLSerializer()).serializeToString(svgElement);%%00010%%00009}%%00010%%00010%%00009return barchart;%%00010%%00010}());"/>
</config>
<config key="cssCode">
<entry key="array-size" type="xint" value="2"/>
<entry key="0" type="xstring" value=".nvd3 .nv-axis{pointer-events:none;opacity:1}.nvd3 .nv-axis path{fill:none;stroke:#000;stroke-opacity:.75;shape-rendering:crispEdges}.nvd3 .nv-axis path.domain{stroke-opacity:.75}.nvd3 .nv-axis.nv-x path.domain{stroke-opacity:0}.nvd3 .nv-axis line{fill:none;stroke:#e5e5e5;shape-rendering:crispEdges}.nvd3 .nv-axis .zero line,.nvd3 .nv-axis line.zero{stroke-opacity:.75}.nvd3 .nv-axis .nv-axisMaxMin text{font-weight:700}.nvd3 .x .nv-axis .nv-axisMaxMin text,.nvd3 .x2 .nv-axis .nv-axisMaxMin text,.nvd3 .x3 .nv-axis .nv-axisMaxMin text{text-anchor:middle}.nvd3 .nv-axis.nv-disabled{opacity:0}.nvd3 .nv-bars rect{fill-opacity:.75;transition:fill-opacity 250ms linear;-moz-transition:fill-opacity 250ms linear;-webkit-transition:fill-opacity 250ms linear}.nvd3 .nv-bars rect.hover{fill-opacity:1}.nvd3 .nv-bars .hover rect{fill:#add8e6}.nvd3 .nv-bars text{fill:rgba(0,0,0,0)}.nvd3 .nv-bars .hover text{fill:rgba(0,0,0,1)}.nvd3 .nv-multibar .nv-groups rect,.nvd3 .nv-multibarHorizontal .nv-groups rect,.nvd3 .nv-discretebar .nv-groups rect{stroke-opacity:0;transition:fill-opacity 250ms linear;-moz-transition:fill-opacity 250ms linear;-webkit-transition:fill-opacity 250ms linear}.nvd3 .nv-multibar .nv-groups rect:hover,.nvd3 .nv-multibarHorizontal .nv-groups rect:hover,.nvd3 .nv-candlestickBar .nv-ticks rect:hover,.nvd3 .nv-discretebar .nv-groups rect:hover{fill-opacity:1}.nvd3 .nv-discretebar .nv-groups text,.nvd3 .nv-multibarHorizontal .nv-groups text{font-weight:700;fill:rgba(0,0,0,1);stroke:rgba(0,0,0,0)}.nvd3 .nv-boxplot circle{fill-opacity:.5}.nvd3 .nv-boxplot circle:hover{fill-opacity:1}.nvd3 .nv-boxplot rect:hover{fill-opacity:1}.nvd3 line.nv-boxplot-median{stroke:#000}.nv-boxplot-tick:hover{stroke-width:2.5px}.nvd3.nv-bullet{font:10px sans-serif}.nvd3.nv-bullet .nv-measure{fill-opacity:.8}.nvd3.nv-bullet .nv-measure:hover{fill-opacity:1}.nvd3.nv-bullet .nv-marker{stroke:#000;stroke-width:2px}.nvd3.nv-bullet .nv-markerTriangle{stroke:#000;fill:#fff;stroke-width:1.5px}.nvd3.nv-bullet .nv-tick line{stroke:#666;stroke-width:.5px}.nvd3.nv-bullet .nv-range.nv-s0{fill:#eee}.nvd3.nv-bullet .nv-range.nv-s1{fill:#ddd}.nvd3.nv-bullet .nv-range.nv-s2{fill:#ccc}.nvd3.nv-bullet .nv-title{font-size:14px;font-weight:700}.nvd3.nv-bullet .nv-subtitle{fill:#999}.nvd3.nv-bullet .nv-range{fill:#bababa;fill-opacity:.4}.nvd3.nv-bullet .nv-range:hover{fill-opacity:.7}.nvd3.nv-candlestickBar .nv-ticks .nv-tick{stroke-width:1px}.nvd3.nv-candlestickBar .nv-ticks .nv-tick.hover{stroke-width:2px}.nvd3.nv-candlestickBar .nv-ticks .nv-tick.positive rect{stroke:#2ca02c;fill:#2ca02c}.nvd3.nv-candlestickBar .nv-ticks .nv-tick.negative rect{stroke:#d62728;fill:#d62728}.with-transitions .nv-candlestickBar .nv-ticks .nv-tick{transition:stroke-width 250ms linear,stroke-opacity 250ms linear;-moz-transition:stroke-width 250ms linear,stroke-opacity 250ms linear;-webkit-transition:stroke-width 250ms linear,stroke-opacity 250ms linear}.nvd3.nv-candlestickBar .nv-ticks line{stroke:#333}.nvd3 .nv-legend .nv-disabled rect{}.nvd3 .nv-check-box .nv-box{fill-opacity:0;stroke-width:2}.nvd3 .nv-check-box .nv-check{fill-opacity:0;stroke-width:4}.nvd3 .nv-series.nv-disabled .nv-check-box .nv-check{fill-opacity:0;stroke-opacity:0}.nvd3 .nv-controlsWrap .nv-legend .nv-check-box .nv-check{opacity:0}.nvd3.nv-linePlusBar .nv-bar rect{fill-opacity:.75}.nvd3.nv-linePlusBar .nv-bar rect:hover{fill-opacity:1}.nvd3 .nv-groups path.nv-line{fill:none}.nvd3 .nv-groups path.nv-area{stroke:none}.nvd3.nv-line .nvd3.nv-scatter .nv-groups .nv-point{fill-opacity:0;stroke-opacity:0}.nvd3.nv-scatter.nv-single-point .nv-groups .nv-point{fill-opacity:.5!important;stroke-opacity:.5!important}.with-transitions .nvd3 .nv-groups .nv-point{transition:stroke-width 250ms linear,stroke-opacity 250ms linear;-moz-transition:stroke-width 250ms linear,stroke-opacity 250ms linear;-webkit-transition:stroke-width 250ms linear,stroke-opacity 250ms linear}.nvd3.nv-scatter .nv-groups .nv-point.hover,.nvd3 .nv-groups .nv-point.hover{stroke-width:7px;fill-opacity:.95!important;stroke-opacity:.95!important}.nvd3 .nv-point-paths path{stroke:#aaa;stroke-opacity:0;fill:#eee;fill-opacity:0}.nvd3 .nv-indexLine{cursor:ew-resize}svg.nvd3-svg{-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-ms-user-select:none;-moz-user-select:none;user-select:none;display:block;width:100%;height:100%}.nvtooltip.with-3d-shadow,.with-3d-shadow .nvtooltip{-moz-box-shadow:0 5px 10px rgba(0,0,0,.2);-webkit-box-shadow:0 5px 10px rgba(0,0,0,.2);box-shadow:0 5px 10px rgba(0,0,0,.2);-webkit-border-radius:5px;-moz-border-radius:5px;border-radius:5px}.nvd3 text{font:400 12px Arial}.nvd3 .title{font:700 14px Arial}.nvd3 .nv-background{fill:#fff;fill-opacity:0}.nvd3.nv-noData{font-size:18px;font-weight:700}.nv-brush .extent{fill-opacity:.125;shape-rendering:crispEdges}.nv-brush .resize path{fill:#eee;stroke:#666}.nvd3 .nv-legend .nv-series{cursor:pointer}.nvd3 .nv-legend .nv-disabled circle{fill-opacity:0}.nvd3 .nv-brush .extent{fill-opacity:0!important}.nvd3 .nv-brushBackground rect{stroke:#000;stroke-width:.4;fill:#fff;fill-opacity:.7}.nvd3.nv-ohlcBar .nv-ticks .nv-tick{stroke-width:1px}.nvd3.nv-ohlcBar .nv-ticks .nv-tick.hover{stroke-width:2px}.nvd3.nv-ohlcBar .nv-ticks .nv-tick.positive{stroke:#2ca02c}.nvd3.nv-ohlcBar .nv-ticks .nv-tick.negative{stroke:#d62728}.nvd3 .background path{fill:none;stroke:#EEE;stroke-opacity:.4;shape-rendering:crispEdges}.nvd3 .foreground path{fill:none;stroke-opacity:.7}.nvd3 .nv-parallelCoordinates-brush .extent{fill:#fff;fill-opacity:.6;stroke:gray;shape-rendering:crispEdges}.nvd3 .nv-parallelCoordinates .hover{fill-opacity:1;stroke-width:3px}.nvd3 .missingValuesline line{fill:none;stroke:#000;stroke-width:1;stroke-opacity:1;stroke-dasharray:5,5}.nvd3.nv-pie path{stroke-opacity:0;transition:fill-opacity 250ms linear,stroke-width 250ms linear,stroke-opacity 250ms linear;-moz-transition:fill-opacity 250ms linear,stroke-width 250ms linear,stroke-opacity 250ms linear;-webkit-transition:fill-opacity 250ms linear,stroke-width 250ms linear,stroke-opacity 250ms linear}.nvd3.nv-pie .nv-pie-title{font-size:24px;fill:rgba(19,196,249,.59)}.nvd3.nv-pie .nv-slice text{stroke:#000;stroke-width:0}.nvd3.nv-pie path{stroke:#fff;stroke-width:1px;stroke-opacity:1}.nvd3.nv-pie .hover path{fill-opacity:.7}.nvd3.nv-pie .nv-label{pointer-events:none}.nvd3.nv-pie .nv-label rect{fill-opacity:0;stroke-opacity:0}.nvd3 .nv-groups .nv-point.hover{stroke-width:20px;stroke-opacity:.5}.nvd3 .nv-scatter .nv-point.hover{fill-opacity:1}.nv-noninteractive{pointer-events:none}.nv-distx,.nv-disty{pointer-events:none}.nvd3.nv-sparkline path{fill:none}.nvd3.nv-sparklineplus g.nv-hoverValue{pointer-events:none}.nvd3.nv-sparklineplus .nv-hoverValue line{stroke:#333;stroke-width:1.5px}.nvd3.nv-sparklineplus,.nvd3.nv-sparklineplus g{pointer-events:all}.nvd3 .nv-hoverArea{fill-opacity:0;stroke-opacity:0}.nvd3.nv-sparklineplus .nv-xValue,.nvd3.nv-sparklineplus .nv-yValue{stroke-width:0;font-size:.9em;font-weight:400}.nvd3.nv-sparklineplus .nv-yValue{stroke:#f66}.nvd3.nv-sparklineplus .nv-maxValue{stroke:#2ca02c;fill:#2ca02c}.nvd3.nv-sparklineplus .nv-minValue{stroke:#d62728;fill:#d62728}.nvd3.nv-sparklineplus .nv-currentValue{font-weight:700;font-size:1.1em}.nvd3.nv-stackedarea path.nv-area{fill-opacity:.7;stroke-opacity:0;transition:fill-opacity 250ms linear,stroke-opacity 250ms linear;-moz-transition:fill-opacity 250ms linear,stroke-opacity 250ms linear;-webkit-transition:fill-opacity 250ms linear,stroke-opacity 250ms linear}.nvd3.nv-stackedarea path.nv-area.hover{fill-opacity:.9}.nvd3.nv-stackedarea .nv-groups .nv-point{stroke-opacity:0;fill-opacity:0}.nvtooltip{position:absolute;background-color:rgba(255,255,255,1);color:rgba(0,0,0,1);padding:1px;border:1px solid rgba(0,0,0,.2);z-index:10000;display:block;font-family:Arial;font-size:13px;text-align:left;pointer-events:none;white-space:nowrap;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.nvtooltip{background:rgba(255,255,255,.8);border:1px solid rgba(0,0,0,.5);border-radius:4px}.nvtooltip.with-transitions,.with-transitions .nvtooltip{transition:opacity 50ms linear;-moz-transition:opacity 50ms linear;-webkit-transition:opacity 50ms linear;transition-delay:200ms;-moz-transition-delay:200ms;-webkit-transition-delay:200ms}.nvtooltip.x-nvtooltip,.nvtooltip.y-nvtooltip{padding:8px}.nvtooltip h3{margin:0;padding:4px 14px;line-height:18px;font-weight:400;background-color:rgba(247,247,247,.75);color:rgba(0,0,0,1);text-align:center;border-bottom:1px solid #ebebeb;-webkit-border-radius:5px 5px 0 0;-moz-border-radius:5px 5px 0 0;border-radius:5px 5px 0 0}.nvtooltip p{margin:0;padding:5px 14px;text-align:center}.nvtooltip span{display:inline-block;margin:2px 0}.nvtooltip table{margin:6px;border-spacing:0}.nvtooltip table td{padding:2px 9px 2px 0;vertical-align:middle}.nvtooltip table td.key{font-weight:400}.nvtooltip table td.value{text-align:right;font-weight:700}.nvtooltip table tr.highlight td{padding:1px 9px 1px 0;border-bottom-style:solid;border-bottom-width:1px;border-top-style:solid;border-top-width:1px}.nvtooltip table td.legend-color-guide div{width:8px;height:8px;vertical-align:middle}.nvtooltip table td.legend-color-guide div{width:12px;height:12px;border:1px solid #999}.nvtooltip .footer{padding:3px;text-align:center}.nvtooltip-pending-removal{pointer-events:none;display:none}.nvd3 .nv-interactiveGuideLine{pointer-events:none}.nvd3 line.nv-guideline{stroke:#ccc}"/>
<entry key="1" type="xstring" value="/* make sure colors on bars are correct (inherit from group) */%%00010svg.colored .nvd3 .nv-multibar .nv-groups rect, %%00010svg.colored .nvd3 .nv-multibarHorizontal .nv-groups rect, %%00010svg.colored .nvd3 .nv-discretebar .nv-groups rect {%%00010%%00009fill: inherit !important;%%00010%%00009stroke: inherit !important;%%00010}"/>
</config>
<config key="jsDependencies">
<entry key="numSettings" type="xint" value="2"/>
<config key="dependency_0">
<entry key="name" type="xstring" value="nvd3"/>
<entry key="path" type="xstring" value="js-lib/nvd3/nv.d3.v1_8_1.js"/>
<entry key="usesDefine" type="xboolean" value="false"/>
<entry key="exports" type="xstring" value="nv"/>
<config key="dependencies">
<entry key="array-size" type="xint" value="1"/>
<entry key="0" type="xstring" value="D3_3.5.5_Debug"/>
</config>
<entry key="local" type="xboolean" value="true"/>
</config>
<config key="dependency_1">
<entry key="name" type="xstring" value="D3_3.5.5_Debug"/>
<entry key="path" type="xstring" value="js-lib/d3/d3.v3_5_5.js"/>
<entry key="usesDefine" type="xboolean" value="false"/>
<entry key="exports" type="xstring" isnull="true" value=""/>
<config key="dependencies">
<entry key="array-size" type="xint" value="0"/>
</config>
<entry key="local" type="xboolean" value="true"/>
</config>
</config>
<config key="cssDependencies">
<entry key="array-size" type="xint" value="1"/>
<entry key="0" type="xstring" value="js-lib/nvd3/nv.d3.v1_8_1.css"/>
</config>
<entry key="new" type="xboolean" value="false"/>
<entry key="inView" type="xboolean" value="true"/>
<config key="tableIds">
<entry key="array-size" type="xint" value="2"/>
<entry key="0" type="xstring" isnull="true" value=""/>
<entry key="1" type="xstring" isnull="true" value=""/>
</config>
<config key="variables">
<entry key="numSettings" type="xint" value="1"/>
<entry key="mapClass" type="xstring" value="string"/>
<entry key="key_0" type="xstring" value="knime.workspace"/>
<entry key="class_0" type="xstring" value="java.lang.String"/>
<entry key="value_0" type="xstring" value="C:\Users\makeg\workspace"/>
</config>
<config key="binaryFiles">
<entry key="numSettings" type="xint" value="0"/>
<entry key="mapClass" type="xstring" value="string"/>
</config>
<config key="options">
<entry key="numSettings" type="xint" value="16"/>
<entry key="mapClass" type="xstring" value="object"/>
<entry key="key_0" type="xstring" value="displayFullscreenButton"/>
<entry key="class_0" type="xstring" value="java.lang.Boolean"/>
<entry key="value_0" type="xboolean" value="true"/>
<entry key="key_1" type="xstring" value="svg"/>
<entry key="class_1" type="xstring" value="org.knime.dynamic.js.SettingsModelSVGOptions$JSONSVGOptions"/>
<config key="value_1">
<entry key="width" type="xint" value="600"/>
<entry key="height" type="xint" value="400"/>
<entry key="fullscreen" type="xboolean" value="true"/>
</config>
<entry key="key_2" type="xstring" value="legend"/>
<entry key="class_2" type="xstring" value="java.lang.Boolean"/>
<entry key="value_2" type="xboolean" value="true"/>
<entry key="key_3" type="xstring" value="enableHorizontalToggle"/>
<entry key="class_3" type="xstring" value="java.lang.Boolean"/>
<entry key="value_3" type="xboolean" value="true"/>
<entry key="key_4" type="xstring" value="freq"/>
<entry key="class_4" type="xstring" value="[Ljava.lang.String;"/>
<config key="value_4">
<entry key="array-size" type="xint" value="1"/>
<entry key="0" type="xstring" value="Avoidance orientation"/>
</config>
<entry key="key_5" type="xstring" value="enableTitleEdit"/>
<entry key="class_5" type="xstring" value="java.lang.Boolean"/>
<entry key="value_5" type="xboolean" value="true"/>
<entry key="key_6" type="xstring" value="enableStackedEdit"/>
<entry key="class_6" type="xstring" value="java.lang.Boolean"/>
<entry key="value_6" type="xboolean" value="true"/>
<entry key="key_7" type="xstring" value="enableAxisEdit"/>
<entry key="class_7" type="xstring" value="java.lang.Boolean"/>
<entry key="value_7" type="xboolean" value="true"/>
<entry key="key_8" type="xstring" value="enableSwitchMissValCat"/>
<entry key="class_8" type="xstring" value="java.lang.Boolean"/>
<entry key="value_8" type="xboolean" value="true"/>
<entry key="key_9" type="xstring" value="reportOnMissingValues"/>
<entry key="class_9" type="xstring" value="java.lang.Boolean"/>
<entry key="value_9" type="xboolean" value="false"/>
<entry key="key_10" type="xstring" value="cat"/>
<entry key="class_10" type="xstring" value="java.lang.String"/>
<entry key="value_10" type="xstring" value="Age"/>
<entry key="key_11" type="xstring" value="enableStaggerToggle"/>
<entry key="class_11" type="xstring" value="java.lang.Boolean"/>
<entry key="value_11" type="xboolean" value="true"/>
<entry key="key_12" type="xstring" value="enableViewControls"/>
<entry key="class_12" type="xstring" value="java.lang.Boolean"/>
<entry key="value_12" type="xboolean" value="true"/>
<entry key="key_13" type="xstring" value="aggr"/>
<entry key="class_13" type="xstring" value="java.lang.String"/>
<entry key="value_13" type="xstring" value="Average"/>
<entry key="key_14" type="xstring" value="showWarnings"/>
<entry key="class_14" type="xstring" value="java.lang.Boolean"/>
<entry key="value_14" type="xboolean" value="true"/>
<entry key="key_15" type="xstring" value="enableSubtitleEdit"/>
<entry key="class_15" type="xstring" value="java.lang.Boolean"/>
<entry key="value_15" type="xboolean" value="true"/>
</config>
<config key="inObjects">
<entry key="numSettings" type="xint" value="2"/>
<config key="inObject_0">
<entry key="knimeDataTableJSON" type="xstring" value="{&quot;@class&quot;:&quot;org.knime.js.core.JSONDataTable&quot;,&quot;id&quot;:&quot;7c27b9b0-3f85-4807-9958-70da7a43ce04&quot;,&quot;extensions&quot;:null,&quot;rows&quot;:[{&quot;data&quot;:[&quot;Age 26-29&quot;,3.384615384615384],&quot;rowKey&quot;:&quot;Row2&quot;},{&quot;data&quot;:[&quot;Age 22-25&quot;,3.2179487179487167],&quot;rowKey&quot;:&quot;Row1&quot;},{&quot;data&quot;:[&quot;Age 18-21&quot;,3.3939393939393927],&quot;rowKey&quot;:&quot;Row0&quot;},{&quot;data&quot;:[&quot;Age &gt;35&quot;,1.9523809523809526],&quot;rowKey&quot;:&quot;Row4&quot;},{&quot;data&quot;:[&quot;Age 30-35&quot;,2.814814814814815],&quot;rowKey&quot;:&quot;Row3&quot;}],&quot;spec&quot;:{&quot;@class&quot;:&quot;org.knime.js.core.JSONDataTableSpec&quot;,&quot;numColumns&quot;:2,&quot;possibleValues&quot;:[[&quot;Age 26-29&quot;,&quot;Age 22-25&quot;,&quot;Age 18-21&quot;,&quot;Age &gt;35&quot;,&quot;Age 30-35&quot;],null],&quot;numRows&quot;:5,&quot;colorModels&quot;:[],&quot;knimeTypes&quot;:[&quot;String&quot;,&quot;Number (double)&quot;],&quot;colNames&quot;:[&quot;Age&quot;,&quot;Avoidance orientation&quot;],&quot;colTypes&quot;:[&quot;string&quot;,&quot;number&quot;],&quot;rowColorValues&quot;:[&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;],&quot;containsMissingValues&quot;:[false,false],&quot;extensionTypes&quot;:[],&quot;extensionNames&quot;:[],&quot;filterIds&quot;:[null,null],&quot;numExtensions&quot;:0,&quot;minValues&quot;:[&quot;Age 18-21&quot;,1.9523809523809526],&quot;maxValues&quot;:[&quot;Age &gt;35&quot;,3.3939393939393927]}}"/>
</config>
<config key="inObject_1">
<entry key="jsonValue" type="xstring" isnull="true" value=""/>
</config>
</config>
<entry key="warnMessage" type="xstring" value=""/>
<entry key="errorMessage" type="xstring" value=""/>
</config>
